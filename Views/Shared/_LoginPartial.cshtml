@using Microsoft.AspNetCore.Identity
@* @inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager *@

<ul class="navbar-nav">
@*     @if (SignInManager.IsSignedIn(User)) *@
    @if((Context.User?.Identity?.IsAuthenticated)??false)
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="Index" title="Manage">Hello @RemnantsProject.Controllers.UsersController.GetUserName(User)</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="" asp-controller="Users" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="Registration">Registration</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="Login">Login</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="Index">All Users</a>
        </li>
    }
</ul>
